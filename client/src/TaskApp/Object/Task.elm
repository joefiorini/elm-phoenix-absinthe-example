-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module TaskApp.Object.Task exposing (..)

import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import TaskApp.InputObject
import TaskApp.Interface
import TaskApp.Object
import TaskApp.Scalar
import TaskApp.Union


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) TaskApp.Object.Task
selection constructor =
    Object.selection constructor


description : Field (Maybe String) TaskApp.Object.Task
description =
    Object.fieldDecoder "description" [] (Decode.string |> Decode.nullable)


id : Field TaskApp.Scalar.Id TaskApp.Object.Task
id =
    Object.fieldDecoder "id" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map TaskApp.Scalar.Id)


isCompleted : Field Bool TaskApp.Object.Task
isCompleted =
    Object.fieldDecoder "isCompleted" [] Decode.bool


name : Field String TaskApp.Object.Task
name =
    Object.fieldDecoder "name" [] Decode.string
